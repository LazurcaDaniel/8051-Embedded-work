                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module src
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _CY
                                     13 	.globl _AC
                                     14 	.globl _F0
                                     15 	.globl _RS1
                                     16 	.globl _RS0
                                     17 	.globl _OV
                                     18 	.globl _F1
                                     19 	.globl _P
                                     20 	.globl _PS
                                     21 	.globl _PT1
                                     22 	.globl _PX1
                                     23 	.globl _PT0
                                     24 	.globl _PX0
                                     25 	.globl _RD
                                     26 	.globl _WR
                                     27 	.globl _T1
                                     28 	.globl _T0
                                     29 	.globl _INT1
                                     30 	.globl _INT0
                                     31 	.globl _TXD
                                     32 	.globl _RXD
                                     33 	.globl _P3_7
                                     34 	.globl _P3_6
                                     35 	.globl _P3_5
                                     36 	.globl _P3_4
                                     37 	.globl _P3_3
                                     38 	.globl _P3_2
                                     39 	.globl _P3_1
                                     40 	.globl _P3_0
                                     41 	.globl _EA
                                     42 	.globl _ES
                                     43 	.globl _ET1
                                     44 	.globl _EX1
                                     45 	.globl _ET0
                                     46 	.globl _EX0
                                     47 	.globl _P2_7
                                     48 	.globl _P2_6
                                     49 	.globl _P2_5
                                     50 	.globl _P2_4
                                     51 	.globl _P2_3
                                     52 	.globl _P2_2
                                     53 	.globl _P2_1
                                     54 	.globl _P2_0
                                     55 	.globl _SM0
                                     56 	.globl _SM1
                                     57 	.globl _SM2
                                     58 	.globl _REN
                                     59 	.globl _TB8
                                     60 	.globl _RB8
                                     61 	.globl _TI
                                     62 	.globl _RI
                                     63 	.globl _P1_7
                                     64 	.globl _P1_6
                                     65 	.globl _P1_5
                                     66 	.globl _P1_4
                                     67 	.globl _P1_3
                                     68 	.globl _P1_2
                                     69 	.globl _P1_1
                                     70 	.globl _P1_0
                                     71 	.globl _TF1
                                     72 	.globl _TR1
                                     73 	.globl _TF0
                                     74 	.globl _TR0
                                     75 	.globl _IE1
                                     76 	.globl _IT1
                                     77 	.globl _IE0
                                     78 	.globl _IT0
                                     79 	.globl _P0_7
                                     80 	.globl _P0_6
                                     81 	.globl _P0_5
                                     82 	.globl _P0_4
                                     83 	.globl _P0_3
                                     84 	.globl _P0_2
                                     85 	.globl _P0_1
                                     86 	.globl _P0_0
                                     87 	.globl _B
                                     88 	.globl _ACC
                                     89 	.globl _PSW
                                     90 	.globl _IP
                                     91 	.globl _P3
                                     92 	.globl _IE
                                     93 	.globl _P2
                                     94 	.globl _SBUF
                                     95 	.globl _SCON
                                     96 	.globl _P1
                                     97 	.globl _TH1
                                     98 	.globl _TH0
                                     99 	.globl _TL1
                                    100 	.globl _TL0
                                    101 	.globl _TMOD
                                    102 	.globl _TCON
                                    103 	.globl _PCON
                                    104 	.globl _DPH
                                    105 	.globl _DPL
                                    106 	.globl _SP
                                    107 	.globl _P0
                                    108 ;--------------------------------------------------------
                                    109 ; special function registers
                                    110 ;--------------------------------------------------------
                                    111 	.area RSEG    (ABS,DATA)
      000000                        112 	.org 0x0000
                           000080   113 _P0	=	0x0080
                           000081   114 _SP	=	0x0081
                           000082   115 _DPL	=	0x0082
                           000083   116 _DPH	=	0x0083
                           000087   117 _PCON	=	0x0087
                           000088   118 _TCON	=	0x0088
                           000089   119 _TMOD	=	0x0089
                           00008A   120 _TL0	=	0x008a
                           00008B   121 _TL1	=	0x008b
                           00008C   122 _TH0	=	0x008c
                           00008D   123 _TH1	=	0x008d
                           000090   124 _P1	=	0x0090
                           000098   125 _SCON	=	0x0098
                           000099   126 _SBUF	=	0x0099
                           0000A0   127 _P2	=	0x00a0
                           0000A8   128 _IE	=	0x00a8
                           0000B0   129 _P3	=	0x00b0
                           0000B8   130 _IP	=	0x00b8
                           0000D0   131 _PSW	=	0x00d0
                           0000E0   132 _ACC	=	0x00e0
                           0000F0   133 _B	=	0x00f0
                                    134 ;--------------------------------------------------------
                                    135 ; special function bits
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 _P0_0	=	0x0080
                           000081   140 _P0_1	=	0x0081
                           000082   141 _P0_2	=	0x0082
                           000083   142 _P0_3	=	0x0083
                           000084   143 _P0_4	=	0x0084
                           000085   144 _P0_5	=	0x0085
                           000086   145 _P0_6	=	0x0086
                           000087   146 _P0_7	=	0x0087
                           000088   147 _IT0	=	0x0088
                           000089   148 _IE0	=	0x0089
                           00008A   149 _IT1	=	0x008a
                           00008B   150 _IE1	=	0x008b
                           00008C   151 _TR0	=	0x008c
                           00008D   152 _TF0	=	0x008d
                           00008E   153 _TR1	=	0x008e
                           00008F   154 _TF1	=	0x008f
                           000090   155 _P1_0	=	0x0090
                           000091   156 _P1_1	=	0x0091
                           000092   157 _P1_2	=	0x0092
                           000093   158 _P1_3	=	0x0093
                           000094   159 _P1_4	=	0x0094
                           000095   160 _P1_5	=	0x0095
                           000096   161 _P1_6	=	0x0096
                           000097   162 _P1_7	=	0x0097
                           000098   163 _RI	=	0x0098
                           000099   164 _TI	=	0x0099
                           00009A   165 _RB8	=	0x009a
                           00009B   166 _TB8	=	0x009b
                           00009C   167 _REN	=	0x009c
                           00009D   168 _SM2	=	0x009d
                           00009E   169 _SM1	=	0x009e
                           00009F   170 _SM0	=	0x009f
                           0000A0   171 _P2_0	=	0x00a0
                           0000A1   172 _P2_1	=	0x00a1
                           0000A2   173 _P2_2	=	0x00a2
                           0000A3   174 _P2_3	=	0x00a3
                           0000A4   175 _P2_4	=	0x00a4
                           0000A5   176 _P2_5	=	0x00a5
                           0000A6   177 _P2_6	=	0x00a6
                           0000A7   178 _P2_7	=	0x00a7
                           0000A8   179 _EX0	=	0x00a8
                           0000A9   180 _ET0	=	0x00a9
                           0000AA   181 _EX1	=	0x00aa
                           0000AB   182 _ET1	=	0x00ab
                           0000AC   183 _ES	=	0x00ac
                           0000AF   184 _EA	=	0x00af
                           0000B0   185 _P3_0	=	0x00b0
                           0000B1   186 _P3_1	=	0x00b1
                           0000B2   187 _P3_2	=	0x00b2
                           0000B3   188 _P3_3	=	0x00b3
                           0000B4   189 _P3_4	=	0x00b4
                           0000B5   190 _P3_5	=	0x00b5
                           0000B6   191 _P3_6	=	0x00b6
                           0000B7   192 _P3_7	=	0x00b7
                           0000B0   193 _RXD	=	0x00b0
                           0000B1   194 _TXD	=	0x00b1
                           0000B2   195 _INT0	=	0x00b2
                           0000B3   196 _INT1	=	0x00b3
                           0000B4   197 _T0	=	0x00b4
                           0000B5   198 _T1	=	0x00b5
                           0000B6   199 _WR	=	0x00b6
                           0000B7   200 _RD	=	0x00b7
                           0000B8   201 _PX0	=	0x00b8
                           0000B9   202 _PT0	=	0x00b9
                           0000BA   203 _PX1	=	0x00ba
                           0000BB   204 _PT1	=	0x00bb
                           0000BC   205 _PS	=	0x00bc
                           0000D0   206 _P	=	0x00d0
                           0000D1   207 _F1	=	0x00d1
                           0000D2   208 _OV	=	0x00d2
                           0000D3   209 _RS0	=	0x00d3
                           0000D4   210 _RS1	=	0x00d4
                           0000D5   211 _F0	=	0x00d5
                           0000D6   212 _AC	=	0x00d6
                           0000D7   213 _CY	=	0x00d7
                                    214 ;--------------------------------------------------------
                                    215 ; overlayable register banks
                                    216 ;--------------------------------------------------------
                                    217 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        218 	.ds 8
                                    219 ;--------------------------------------------------------
                                    220 ; internal ram data
                                    221 ;--------------------------------------------------------
                                    222 	.area DSEG    (DATA)
                                    223 ;--------------------------------------------------------
                                    224 ; overlayable items in internal ram
                                    225 ;--------------------------------------------------------
                                    226 	.area	OSEG    (OVR,DATA)
                                    227 ;--------------------------------------------------------
                                    228 ; Stack segment in internal ram
                                    229 ;--------------------------------------------------------
                                    230 	.area SSEG
      000008                        231 __start__stack:
      000008                        232 	.ds	1
                                    233 
                                    234 ;--------------------------------------------------------
                                    235 ; indirectly addressable internal ram data
                                    236 ;--------------------------------------------------------
                                    237 	.area ISEG    (DATA)
                                    238 ;--------------------------------------------------------
                                    239 ; absolute internal ram data
                                    240 ;--------------------------------------------------------
                                    241 	.area IABS    (ABS,DATA)
                                    242 	.area IABS    (ABS,DATA)
                                    243 ;--------------------------------------------------------
                                    244 ; bit data
                                    245 ;--------------------------------------------------------
                                    246 	.area BSEG    (BIT)
                                    247 ;--------------------------------------------------------
                                    248 ; paged external ram data
                                    249 ;--------------------------------------------------------
                                    250 	.area PSEG    (PAG,XDATA)
                                    251 ;--------------------------------------------------------
                                    252 ; uninitialized external ram data
                                    253 ;--------------------------------------------------------
                                    254 	.area XSEG    (XDATA)
                                    255 ;--------------------------------------------------------
                                    256 ; absolute external ram data
                                    257 ;--------------------------------------------------------
                                    258 	.area XABS    (ABS,XDATA)
                                    259 ;--------------------------------------------------------
                                    260 ; initialized external ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area XISEG   (XDATA)
                                    263 	.area HOME    (CODE)
                                    264 	.area GSINIT0 (CODE)
                                    265 	.area GSINIT1 (CODE)
                                    266 	.area GSINIT2 (CODE)
                                    267 	.area GSINIT3 (CODE)
                                    268 	.area GSINIT4 (CODE)
                                    269 	.area GSINIT5 (CODE)
                                    270 	.area GSINIT  (CODE)
                                    271 	.area GSFINAL (CODE)
                                    272 	.area CSEG    (CODE)
                                    273 ;--------------------------------------------------------
                                    274 ; interrupt vector
                                    275 ;--------------------------------------------------------
                                    276 	.area HOME    (CODE)
      000000                        277 __interrupt_vect:
      000000 02 00 06         [24]  278 	ljmp	__sdcc_gsinit_startup
                                    279 ;--------------------------------------------------------
                                    280 ; global & static initialisations
                                    281 ;--------------------------------------------------------
                                    282 	.area HOME    (CODE)
                                    283 	.area GSINIT  (CODE)
                                    284 	.area GSFINAL (CODE)
                                    285 	.area GSINIT  (CODE)
                                    286 	.globl __sdcc_gsinit_startup
                                    287 	.globl __sdcc_program_startup
                                    288 	.globl __start__stack
                                    289 	.globl __mcs51_genXINIT
                                    290 	.globl __mcs51_genXRAMCLEAR
                                    291 	.globl __mcs51_genRAMCLEAR
                                    292 	.area GSFINAL (CODE)
      00005F 02 00 03         [24]  293 	ljmp	__sdcc_program_startup
                                    294 ;--------------------------------------------------------
                                    295 ; Home
                                    296 ;--------------------------------------------------------
                                    297 	.area HOME    (CODE)
                                    298 	.area HOME    (CODE)
      000003                        299 __sdcc_program_startup:
      000003 02 00 62         [24]  300 	ljmp	_main
                                    301 ;	return from main will return to caller
                                    302 ;--------------------------------------------------------
                                    303 ; code
                                    304 ;--------------------------------------------------------
                                    305 	.area CSEG    (CODE)
                                    306 ;------------------------------------------------------------
                                    307 ;Allocation info for local variables in function 'main'
                                    308 ;------------------------------------------------------------
                                    309 ;value                     Allocated to registers r7 
                                    310 ;------------------------------------------------------------
                                    311 ;	.\src.c:3: int main(){
                                    312 ;	-----------------------------------------
                                    313 ;	 function main
                                    314 ;	-----------------------------------------
      000062                        315 _main:
                           000007   316 	ar7 = 0x07
                           000006   317 	ar6 = 0x06
                           000005   318 	ar5 = 0x05
                           000004   319 	ar4 = 0x04
                           000003   320 	ar3 = 0x03
                           000002   321 	ar2 = 0x02
                           000001   322 	ar1 = 0x01
                           000000   323 	ar0 = 0x00
                                    324 ;	.\src.c:4: P3 = 0;
      000062 75 B0 00         [24]  325 	mov	_P3,#0x00
                                    326 ;	.\src.c:6: P0 = 0b01110111;
      000065 75 80 77         [24]  327 	mov	_P0,#0x77
      000068 7F 00            [12]  328 	mov	r7,#0x00
                                    329 ;	.\src.c:7: if(P0_6 == 0){
      00006A 20 86 04         [24]  330 	jb	_P0_6,00107$
                                    331 ;	.\src.c:8: value = 1;
      00006D 7F 01            [12]  332 	mov	r7,#0x01
      00006F 80 0C            [24]  333 	sjmp	00108$
      000071                        334 00107$:
                                    335 ;	.\src.c:10: else if(P0_5 == 0){
      000071 20 85 04         [24]  336 	jb	_P0_5,00104$
                                    337 ;	.\src.c:11: value = 2;
      000074 7F 02            [12]  338 	mov	r7,#0x02
      000076 80 05            [24]  339 	sjmp	00108$
      000078                        340 00104$:
                                    341 ;	.\src.c:13: else if(P0_4 == 0){
      000078 20 84 02         [24]  342 	jb	_P0_4,00108$
                                    343 ;	.\src.c:14: value = 3;
      00007B 7F 03            [12]  344 	mov	r7,#0x03
      00007D                        345 00108$:
                                    346 ;	.\src.c:16: P0 = 0b01111011;
      00007D 75 80 7B         [24]  347 	mov	_P0,#0x7b
                                    348 ;	.\src.c:17: if(P0_6 == 0){
      000080 20 86 04         [24]  349 	jb	_P0_6,00115$
                                    350 ;	.\src.c:18: value = 4;
      000083 7F 04            [12]  351 	mov	r7,#0x04
      000085 80 0C            [24]  352 	sjmp	00116$
      000087                        353 00115$:
                                    354 ;	.\src.c:20: else if(P0_5 == 0){
      000087 20 85 04         [24]  355 	jb	_P0_5,00112$
                                    356 ;	.\src.c:21: value = 5;
      00008A 7F 05            [12]  357 	mov	r7,#0x05
      00008C 80 05            [24]  358 	sjmp	00116$
      00008E                        359 00112$:
                                    360 ;	.\src.c:23: else if(P0_4 == 0){
      00008E 20 84 02         [24]  361 	jb	_P0_4,00116$
                                    362 ;	.\src.c:24: value = 6;
      000091 7F 06            [12]  363 	mov	r7,#0x06
      000093                        364 00116$:
                                    365 ;	.\src.c:26: P0 = 0b011111101;
      000093 75 80 FD         [24]  366 	mov	_P0,#0xfd
                                    367 ;	.\src.c:27: if(P0_6 == 0){
      000096 20 86 04         [24]  368 	jb	_P0_6,00123$
                                    369 ;	.\src.c:28: value = 7;
      000099 7F 07            [12]  370 	mov	r7,#0x07
      00009B 80 0C            [24]  371 	sjmp	00124$
      00009D                        372 00123$:
                                    373 ;	.\src.c:30: else if(P0_5 == 0){
      00009D 20 85 04         [24]  374 	jb	_P0_5,00120$
                                    375 ;	.\src.c:31: value = 8;
      0000A0 7F 08            [12]  376 	mov	r7,#0x08
      0000A2 80 05            [24]  377 	sjmp	00124$
      0000A4                        378 00120$:
                                    379 ;	.\src.c:33: else if(P0_4 == 0){
      0000A4 20 84 02         [24]  380 	jb	_P0_4,00124$
                                    381 ;	.\src.c:34: value = 9;
      0000A7 7F 09            [12]  382 	mov	r7,#0x09
      0000A9                        383 00124$:
                                    384 ;	.\src.c:36: P0 = 0b011111110;
      0000A9 75 80 FE         [24]  385 	mov	_P0,#0xfe
                                    386 ;	.\src.c:37: if(P0_5 == 0)
      0000AC 20 85 02         [24]  387 	jb	_P0_5,00140$
                                    388 ;	.\src.c:38: value = 0;
      0000AF 7F 00            [12]  389 	mov	r7,#0x00
                                    390 ;	.\src.c:39: while(1){
      0000B1                        391 00140$:
                                    392 ;	.\src.c:40: switch (value)
      0000B1 EF               [12]  393 	mov	a,r7
      0000B2 24 0A            [12]  394 	add	a,#(00222$-3-.)
      0000B4 83               [24]  395 	movc	a,@a+pc
      0000B5 F5 82            [12]  396 	mov	dpl,a
      0000B7 EF               [12]  397 	mov	a,r7
      0000B8 24 0E            [12]  398 	add	a,#(00223$-3-.)
      0000BA 83               [24]  399 	movc	a,@a+pc
      0000BB F5 83            [12]  400 	mov	dph,a
      0000BD E4               [12]  401 	clr	a
      0000BE 73               [24]  402 	jmp	@a+dptr
      0000BF                        403 00222$:
      0000BF D3                     404 	.db	00127$
      0000C0 D8                     405 	.db	00128$
      0000C1 DD                     406 	.db	00129$
      0000C2 E2                     407 	.db	00130$
      0000C3 E7                     408 	.db	00131$
      0000C4 EC                     409 	.db	00132$
      0000C5 F1                     410 	.db	00133$
      0000C6 F6                     411 	.db	00134$
      0000C7 FB                     412 	.db	00135$
      0000C8 00                     413 	.db	00136$
      0000C9                        414 00223$:
      0000C9 00                     415 	.db	00127$>>8
      0000CA 00                     416 	.db	00128$>>8
      0000CB 00                     417 	.db	00129$>>8
      0000CC 00                     418 	.db	00130$>>8
      0000CD 00                     419 	.db	00131$>>8
      0000CE 00                     420 	.db	00132$>>8
      0000CF 00                     421 	.db	00133$>>8
      0000D0 00                     422 	.db	00134$>>8
      0000D1 00                     423 	.db	00135$>>8
      0000D2 01                     424 	.db	00136$>>8
                                    425 ;	.\src.c:42: case 0:
      0000D3                        426 00127$:
                                    427 ;	.\src.c:43: P1 = 0b11000000;
      0000D3 75 90 C0         [24]  428 	mov	_P1,#0xc0
                                    429 ;	.\src.c:44: break;
                                    430 ;	.\src.c:45: case 1:
      0000D6 80 D9            [24]  431 	sjmp	00140$
      0000D8                        432 00128$:
                                    433 ;	.\src.c:46: P1 = 0b11111001;
      0000D8 75 90 F9         [24]  434 	mov	_P1,#0xf9
                                    435 ;	.\src.c:47: break;
                                    436 ;	.\src.c:48: case 2:
      0000DB 80 D4            [24]  437 	sjmp	00140$
      0000DD                        438 00129$:
                                    439 ;	.\src.c:49: P1 = 0b10100100;
      0000DD 75 90 A4         [24]  440 	mov	_P1,#0xa4
                                    441 ;	.\src.c:50: break;
                                    442 ;	.\src.c:52: case 3:
      0000E0 80 CF            [24]  443 	sjmp	00140$
      0000E2                        444 00130$:
                                    445 ;	.\src.c:53: P1 = 0b101100001;
      0000E2 75 90 61         [24]  446 	mov	_P1,#0x61
                                    447 ;	.\src.c:54: break;
                                    448 ;	.\src.c:56: case 4: 
      0000E5 80 CA            [24]  449 	sjmp	00140$
      0000E7                        450 00131$:
                                    451 ;	.\src.c:57: P1 = 0b10011001;
      0000E7 75 90 99         [24]  452 	mov	_P1,#0x99
                                    453 ;	.\src.c:58: break;
                                    454 ;	.\src.c:60: case 5:
      0000EA 80 C5            [24]  455 	sjmp	00140$
      0000EC                        456 00132$:
                                    457 ;	.\src.c:61: P1 = 0b10010010;
      0000EC 75 90 92         [24]  458 	mov	_P1,#0x92
                                    459 ;	.\src.c:62: break;
                                    460 ;	.\src.c:64: case 6:
      0000EF 80 C0            [24]  461 	sjmp	00140$
      0000F1                        462 00133$:
                                    463 ;	.\src.c:65: P1 = 0b10000010;
      0000F1 75 90 82         [24]  464 	mov	_P1,#0x82
                                    465 ;	.\src.c:66: break;
                                    466 ;	.\src.c:68: case 7:
      0000F4 80 BB            [24]  467 	sjmp	00140$
      0000F6                        468 00134$:
                                    469 ;	.\src.c:69: P1 = 0b11111000;
      0000F6 75 90 F8         [24]  470 	mov	_P1,#0xf8
                                    471 ;	.\src.c:70: break;
                                    472 ;	.\src.c:72: case 8:
      0000F9 80 B6            [24]  473 	sjmp	00140$
      0000FB                        474 00135$:
                                    475 ;	.\src.c:73: P1 = 0b10000000;
      0000FB 75 90 80         [24]  476 	mov	_P1,#0x80
                                    477 ;	.\src.c:74: break;
                                    478 ;	.\src.c:76: case 9:
      0000FE 80 B1            [24]  479 	sjmp	00140$
      000100                        480 00136$:
                                    481 ;	.\src.c:77: P1 = 0b10010000;
      000100 75 90 90         [24]  482 	mov	_P1,#0x90
                                    483 ;	.\src.c:78: break;
                                    484 ;	.\src.c:81: }
                                    485 ;	.\src.c:83: }
      000103 80 AC            [24]  486 	sjmp	00140$
                                    487 	.area CSEG    (CODE)
                                    488 	.area CONST   (CODE)
                                    489 	.area XINIT   (CODE)
                                    490 	.area CABS    (ABS,CODE)
